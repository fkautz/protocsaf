// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.1
// source: csaf.proto

package protocsaf

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CsafMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Document        *CsafMessage_Document        `protobuf:"bytes,1,opt,name=document,proto3" json:"document,omitempty"`
	ProductTree     *CsafMessage_ProductTree     `protobuf:"bytes,2,opt,name=product_tree,json=productTree,proto3" json:"product_tree,omitempty"`
	Vulnerabilities []*CsafMessage_Vulnerability `protobuf:"bytes,3,rep,name=vulnerabilities,proto3" json:"vulnerabilities,omitempty"`
}

func (x *CsafMessage) Reset() {
	*x = CsafMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage) ProtoMessage() {}

func (x *CsafMessage) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage.ProtoReflect.Descriptor instead.
func (*CsafMessage) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0}
}

func (x *CsafMessage) GetDocument() *CsafMessage_Document {
	if x != nil {
		return x.Document
	}
	return nil
}

func (x *CsafMessage) GetProductTree() *CsafMessage_ProductTree {
	if x != nil {
		return x.ProductTree
	}
	return nil
}

func (x *CsafMessage) GetVulnerabilities() []*CsafMessage_Vulnerability {
	if x != nil {
		return x.Vulnerabilities
	}
	return nil
}

type CsafMessage_Publisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category         string `protobuf:"bytes,1,opt,name=category,proto3" json:"category,omitempty"`
	ContactDetails   string `protobuf:"bytes,2,opt,name=contact_details,json=contactDetails,proto3" json:"contact_details,omitempty"`
	IssuingAuthority string `protobuf:"bytes,3,opt,name=issuing_authority,json=issuingAuthority,proto3" json:"issuing_authority,omitempty"`
	Name             string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Namespace        string `protobuf:"bytes,5,opt,name=namespace,proto3" json:"namespace,omitempty"`
}

func (x *CsafMessage_Publisher) Reset() {
	*x = CsafMessage_Publisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Publisher) ProtoMessage() {}

func (x *CsafMessage_Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Publisher.ProtoReflect.Descriptor instead.
func (*CsafMessage_Publisher) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 0}
}

func (x *CsafMessage_Publisher) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Publisher) GetContactDetails() string {
	if x != nil {
		return x.ContactDetails
	}
	return ""
}

func (x *CsafMessage_Publisher) GetIssuingAuthority() string {
	if x != nil {
		return x.IssuingAuthority
	}
	return ""
}

func (x *CsafMessage_Publisher) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CsafMessage_Publisher) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

type CsafMessage_RevisionHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Number  string `protobuf:"bytes,1,opt,name=number,proto3" json:"number,omitempty"`
	Date    string `protobuf:"bytes,2,opt,name=date,proto3" json:"date,omitempty"`
	Summary string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *CsafMessage_RevisionHistory) Reset() {
	*x = CsafMessage_RevisionHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_RevisionHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_RevisionHistory) ProtoMessage() {}

func (x *CsafMessage_RevisionHistory) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_RevisionHistory.ProtoReflect.Descriptor instead.
func (*CsafMessage_RevisionHistory) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 1}
}

func (x *CsafMessage_RevisionHistory) GetNumber() string {
	if x != nil {
		return x.Number
	}
	return ""
}

func (x *CsafMessage_RevisionHistory) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CsafMessage_RevisionHistory) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type CsafMessage_Engine struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *CsafMessage_Engine) Reset() {
	*x = CsafMessage_Engine{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Engine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Engine) ProtoMessage() {}

func (x *CsafMessage_Engine) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Engine.ProtoReflect.Descriptor instead.
func (*CsafMessage_Engine) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 2}
}

func (x *CsafMessage_Engine) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CsafMessage_Engine) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CsafMessage_Generator struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Date    string              `protobuf:"bytes,1,opt,name=date,proto3" json:"date,omitempty"`
	Engine  *CsafMessage_Engine `protobuf:"bytes,2,opt,name=engine,proto3" json:"engine,omitempty"`
	Summary string              `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *CsafMessage_Generator) Reset() {
	*x = CsafMessage_Generator{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Generator) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Generator) ProtoMessage() {}

func (x *CsafMessage_Generator) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Generator.ProtoReflect.Descriptor instead.
func (*CsafMessage_Generator) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 3}
}

func (x *CsafMessage_Generator) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *CsafMessage_Generator) GetEngine() *CsafMessage_Engine {
	if x != nil {
		return x.Engine
	}
	return nil
}

func (x *CsafMessage_Generator) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type CsafMessage_Tracking struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 string                         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Status             string                         `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	Version            string                         `protobuf:"bytes,3,opt,name=version,proto3" json:"version,omitempty"`
	RevisionHistory    []*CsafMessage_RevisionHistory `protobuf:"bytes,4,rep,name=revision_history,json=revisionHistory,proto3" json:"revision_history,omitempty"`
	InitialReleaseDate string                         `protobuf:"bytes,5,opt,name=initial_release_date,json=initialReleaseDate,proto3" json:"initial_release_date,omitempty"`
	CurrentReleaseDate string                         `protobuf:"bytes,6,opt,name=current_release_date,json=currentReleaseDate,proto3" json:"current_release_date,omitempty"`
	Generator          *CsafMessage_Generator         `protobuf:"bytes,7,opt,name=generator,proto3" json:"generator,omitempty"`
}

func (x *CsafMessage_Tracking) Reset() {
	*x = CsafMessage_Tracking{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Tracking) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Tracking) ProtoMessage() {}

func (x *CsafMessage_Tracking) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Tracking.ProtoReflect.Descriptor instead.
func (*CsafMessage_Tracking) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 4}
}

func (x *CsafMessage_Tracking) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CsafMessage_Tracking) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *CsafMessage_Tracking) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CsafMessage_Tracking) GetRevisionHistory() []*CsafMessage_RevisionHistory {
	if x != nil {
		return x.RevisionHistory
	}
	return nil
}

func (x *CsafMessage_Tracking) GetInitialReleaseDate() string {
	if x != nil {
		return x.InitialReleaseDate
	}
	return ""
}

func (x *CsafMessage_Tracking) GetCurrentReleaseDate() string {
	if x != nil {
		return x.CurrentReleaseDate
	}
	return ""
}

func (x *CsafMessage_Tracking) GetGenerator() *CsafMessage_Generator {
	if x != nil {
		return x.Generator
	}
	return nil
}

type CsafMessage_Note struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title    string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Text     string `protobuf:"bytes,3,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CsafMessage_Note) Reset() {
	*x = CsafMessage_Note{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Note) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Note) ProtoMessage() {}

func (x *CsafMessage_Note) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Note.ProtoReflect.Descriptor instead.
func (*CsafMessage_Note) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 5}
}

func (x *CsafMessage_Note) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CsafMessage_Note) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Note) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CsafMessage_Distribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CsafMessage_Distribution) Reset() {
	*x = CsafMessage_Distribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Distribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Distribution) ProtoMessage() {}

func (x *CsafMessage_Distribution) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Distribution.ProtoReflect.Descriptor instead.
func (*CsafMessage_Distribution) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 6}
}

func (x *CsafMessage_Distribution) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CsafMessage_Reference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url     string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	Summary string `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *CsafMessage_Reference) Reset() {
	*x = CsafMessage_Reference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Reference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Reference) ProtoMessage() {}

func (x *CsafMessage_Reference) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Reference.ProtoReflect.Descriptor instead.
func (*CsafMessage_Reference) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 7}
}

func (x *CsafMessage_Reference) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *CsafMessage_Reference) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type CsafMessage_AggregateSeverity struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Namespace string `protobuf:"bytes,1,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Text      string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CsafMessage_AggregateSeverity) Reset() {
	*x = CsafMessage_AggregateSeverity{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_AggregateSeverity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_AggregateSeverity) ProtoMessage() {}

func (x *CsafMessage_AggregateSeverity) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_AggregateSeverity.ProtoReflect.Descriptor instead.
func (*CsafMessage_AggregateSeverity) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 8}
}

func (x *CsafMessage_AggregateSeverity) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CsafMessage_AggregateSeverity) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CsafMessage_Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang              string                         `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	Title             string                         `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Category          string                         `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	CsafVersion       string                         `protobuf:"bytes,4,opt,name=csaf_version,json=csafVersion,proto3" json:"csaf_version,omitempty"`
	Publisher         *CsafMessage_Publisher         `protobuf:"bytes,5,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Tracking          *CsafMessage_Tracking          `protobuf:"bytes,6,opt,name=tracking,proto3" json:"tracking,omitempty"`
	Notes             []*CsafMessage_Note            `protobuf:"bytes,7,rep,name=notes,proto3" json:"notes,omitempty"`
	Distribution      *CsafMessage_Distribution      `protobuf:"bytes,8,opt,name=distribution,proto3" json:"distribution,omitempty"`
	References        []*CsafMessage_Reference       `protobuf:"bytes,9,rep,name=references,proto3" json:"references,omitempty"`
	AggregateSeverity *CsafMessage_AggregateSeverity `protobuf:"bytes,10,opt,name=aggregate_severity,json=aggregateSeverity,proto3" json:"aggregate_severity,omitempty"`
}

func (x *CsafMessage_Document) Reset() {
	*x = CsafMessage_Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Document) ProtoMessage() {}

func (x *CsafMessage_Document) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Document.ProtoReflect.Descriptor instead.
func (*CsafMessage_Document) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 9}
}

func (x *CsafMessage_Document) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *CsafMessage_Document) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CsafMessage_Document) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Document) GetCsafVersion() string {
	if x != nil {
		return x.CsafVersion
	}
	return ""
}

func (x *CsafMessage_Document) GetPublisher() *CsafMessage_Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *CsafMessage_Document) GetTracking() *CsafMessage_Tracking {
	if x != nil {
		return x.Tracking
	}
	return nil
}

func (x *CsafMessage_Document) GetNotes() []*CsafMessage_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *CsafMessage_Document) GetDistribution() *CsafMessage_Distribution {
	if x != nil {
		return x.Distribution
	}
	return nil
}

func (x *CsafMessage_Document) GetReferences() []*CsafMessage_Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *CsafMessage_Document) GetAggregateSeverity() *CsafMessage_AggregateSeverity {
	if x != nil {
		return x.AggregateSeverity
	}
	return nil
}

type CsafMessage_Product struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductId string `protobuf:"bytes,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Name      string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *CsafMessage_Product) Reset() {
	*x = CsafMessage_Product{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Product) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Product) ProtoMessage() {}

func (x *CsafMessage_Product) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Product.ProtoReflect.Descriptor instead.
func (*CsafMessage_Product) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 10}
}

func (x *CsafMessage_Product) GetProductId() string {
	if x != nil {
		return x.ProductId
	}
	return ""
}

func (x *CsafMessage_Product) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CsafMessage_Branches struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string                  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Category string                  `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Product  *CsafMessage_Product    `protobuf:"bytes,3,opt,name=product,proto3" json:"product,omitempty"`
	Branches []*CsafMessage_Branches `protobuf:"bytes,4,rep,name=branches,proto3" json:"branches,omitempty"`
}

func (x *CsafMessage_Branches) Reset() {
	*x = CsafMessage_Branches{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Branches) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Branches) ProtoMessage() {}

func (x *CsafMessage_Branches) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Branches.ProtoReflect.Descriptor instead.
func (*CsafMessage_Branches) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 11}
}

func (x *CsafMessage_Branches) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CsafMessage_Branches) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Branches) GetProduct() *CsafMessage_Product {
	if x != nil {
		return x.Product
	}
	return nil
}

func (x *CsafMessage_Branches) GetBranches() []*CsafMessage_Branches {
	if x != nil {
		return x.Branches
	}
	return nil
}

type CsafMessage_Relationship struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProductReference          string               `protobuf:"bytes,1,opt,name=product_reference,json=productReference,proto3" json:"product_reference,omitempty"`
	Category                  string               `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	RelatesToProductReference string               `protobuf:"bytes,3,opt,name=relates_to_product_reference,json=relatesToProductReference,proto3" json:"relates_to_product_reference,omitempty"`
	FullProductName           *CsafMessage_Product `protobuf:"bytes,4,opt,name=full_product_name,json=fullProductName,proto3" json:"full_product_name,omitempty"`
}

func (x *CsafMessage_Relationship) Reset() {
	*x = CsafMessage_Relationship{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Relationship) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Relationship) ProtoMessage() {}

func (x *CsafMessage_Relationship) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Relationship.ProtoReflect.Descriptor instead.
func (*CsafMessage_Relationship) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 12}
}

func (x *CsafMessage_Relationship) GetProductReference() string {
	if x != nil {
		return x.ProductReference
	}
	return ""
}

func (x *CsafMessage_Relationship) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Relationship) GetRelatesToProductReference() string {
	if x != nil {
		return x.RelatesToProductReference
	}
	return ""
}

func (x *CsafMessage_Relationship) GetFullProductName() *CsafMessage_Product {
	if x != nil {
		return x.FullProductName
	}
	return nil
}

type CsafMessage_ProductTree struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Branches      []*CsafMessage_Branches     `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	Relationships []*CsafMessage_Relationship `protobuf:"bytes,2,rep,name=relationships,proto3" json:"relationships,omitempty"`
}

func (x *CsafMessage_ProductTree) Reset() {
	*x = CsafMessage_ProductTree{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_ProductTree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_ProductTree) ProtoMessage() {}

func (x *CsafMessage_ProductTree) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_ProductTree.ProtoReflect.Descriptor instead.
func (*CsafMessage_ProductTree) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 13}
}

func (x *CsafMessage_ProductTree) GetBranches() []*CsafMessage_Branches {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *CsafMessage_ProductTree) GetRelationships() []*CsafMessage_Relationship {
	if x != nil {
		return x.Relationships
	}
	return nil
}

type CsafMessage_VulnerabilityId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SystemName string `protobuf:"bytes,1,opt,name=system_name,json=systemName,proto3" json:"system_name,omitempty"`
	Text       string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *CsafMessage_VulnerabilityId) Reset() {
	*x = CsafMessage_VulnerabilityId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_VulnerabilityId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_VulnerabilityId) ProtoMessage() {}

func (x *CsafMessage_VulnerabilityId) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_VulnerabilityId.ProtoReflect.Descriptor instead.
func (*CsafMessage_VulnerabilityId) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 14}
}

func (x *CsafMessage_VulnerabilityId) GetSystemName() string {
	if x != nil {
		return x.SystemName
	}
	return ""
}

func (x *CsafMessage_VulnerabilityId) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type CsafMessage_ProductStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Fixed              []string `protobuf:"bytes,1,rep,name=fixed,proto3" json:"fixed,omitempty"`
	KnownAffected      []string `protobuf:"bytes,2,rep,name=known_affected,json=knownAffected,proto3" json:"known_affected,omitempty"`
	KnownNotAffected   []string `protobuf:"bytes,3,rep,name=known_not_affected,json=knownNotAffected,proto3" json:"known_not_affected,omitempty"`
	UnderInvestigation []string `protobuf:"bytes,4,rep,name=under_investigation,json=underInvestigation,proto3" json:"under_investigation,omitempty"`
}

func (x *CsafMessage_ProductStatus) Reset() {
	*x = CsafMessage_ProductStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_ProductStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_ProductStatus) ProtoMessage() {}

func (x *CsafMessage_ProductStatus) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_ProductStatus.ProtoReflect.Descriptor instead.
func (*CsafMessage_ProductStatus) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 15}
}

func (x *CsafMessage_ProductStatus) GetFixed() []string {
	if x != nil {
		return x.Fixed
	}
	return nil
}

func (x *CsafMessage_ProductStatus) GetKnownAffected() []string {
	if x != nil {
		return x.KnownAffected
	}
	return nil
}

func (x *CsafMessage_ProductStatus) GetKnownNotAffected() []string {
	if x != nil {
		return x.KnownNotAffected
	}
	return nil
}

func (x *CsafMessage_ProductStatus) GetUnderInvestigation() []string {
	if x != nil {
		return x.UnderInvestigation
	}
	return nil
}

type CsafMessage_CvssV3 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version      string  `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	BaseScore    float64 `protobuf:"fixed64,2,opt,name=baseScore,proto3" json:"baseScore,omitempty"`
	BaseSeverity string  `protobuf:"bytes,3,opt,name=baseSeverity,proto3" json:"baseSeverity,omitempty"`
	VectorString string  `protobuf:"bytes,4,opt,name=vectorString,proto3" json:"vectorString,omitempty"`
}

func (x *CsafMessage_CvssV3) Reset() {
	*x = CsafMessage_CvssV3{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_CvssV3) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_CvssV3) ProtoMessage() {}

func (x *CsafMessage_CvssV3) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_CvssV3.ProtoReflect.Descriptor instead.
func (*CsafMessage_CvssV3) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 16}
}

func (x *CsafMessage_CvssV3) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *CsafMessage_CvssV3) GetBaseScore() float64 {
	if x != nil {
		return x.BaseScore
	}
	return 0
}

func (x *CsafMessage_CvssV3) GetBaseSeverity() string {
	if x != nil {
		return x.BaseSeverity
	}
	return ""
}

func (x *CsafMessage_CvssV3) GetVectorString() string {
	if x != nil {
		return x.VectorString
	}
	return ""
}

type CsafMessage_Score struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Products []string            `protobuf:"bytes,1,rep,name=products,proto3" json:"products,omitempty"`
	CvssV3   *CsafMessage_CvssV3 `protobuf:"bytes,2,opt,name=cvss_v3,json=cvssV3,proto3" json:"cvss_v3,omitempty"`
}

func (x *CsafMessage_Score) Reset() {
	*x = CsafMessage_Score{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Score) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Score) ProtoMessage() {}

func (x *CsafMessage_Score) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Score.ProtoReflect.Descriptor instead.
func (*CsafMessage_Score) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 17}
}

func (x *CsafMessage_Score) GetProducts() []string {
	if x != nil {
		return x.Products
	}
	return nil
}

func (x *CsafMessage_Score) GetCvssV3() *CsafMessage_CvssV3 {
	if x != nil {
		return x.CvssV3
	}
	return nil
}

type CsafMessage_Remedation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details  string `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
	Url      string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *CsafMessage_Remedation) Reset() {
	*x = CsafMessage_Remedation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Remedation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Remedation) ProtoMessage() {}

func (x *CsafMessage_Remedation) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Remedation.ProtoReflect.Descriptor instead.
func (*CsafMessage_Remedation) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 18}
}

func (x *CsafMessage_Remedation) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *CsafMessage_Remedation) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *CsafMessage_Remedation) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type CsafMessage_Involvement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Party  string `protobuf:"bytes,1,opt,name=party,proto3" json:"party,omitempty"`
	Status string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *CsafMessage_Involvement) Reset() {
	*x = CsafMessage_Involvement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Involvement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Involvement) ProtoMessage() {}

func (x *CsafMessage_Involvement) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Involvement.ProtoReflect.Descriptor instead.
func (*CsafMessage_Involvement) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 19}
}

func (x *CsafMessage_Involvement) GetParty() string {
	if x != nil {
		return x.Party
	}
	return ""
}

func (x *CsafMessage_Involvement) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type CsafMessage_Threat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details  string `protobuf:"bytes,1,opt,name=details,proto3" json:"details,omitempty"`
	Category string `protobuf:"bytes,2,opt,name=category,proto3" json:"category,omitempty"`
}

func (x *CsafMessage_Threat) Reset() {
	*x = CsafMessage_Threat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Threat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Threat) ProtoMessage() {}

func (x *CsafMessage_Threat) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Threat.ProtoReflect.Descriptor instead.
func (*CsafMessage_Threat) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 20}
}

func (x *CsafMessage_Threat) GetDetails() string {
	if x != nil {
		return x.Details
	}
	return ""
}

func (x *CsafMessage_Threat) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

type CsafMessage_Acknowledgement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Names        []string `protobuf:"bytes,1,rep,name=names,proto3" json:"names,omitempty"`
	Organization string   `protobuf:"bytes,2,opt,name=organization,proto3" json:"organization,omitempty"`
	Summary      string   `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`
}

func (x *CsafMessage_Acknowledgement) Reset() {
	*x = CsafMessage_Acknowledgement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Acknowledgement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Acknowledgement) ProtoMessage() {}

func (x *CsafMessage_Acknowledgement) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Acknowledgement.ProtoReflect.Descriptor instead.
func (*CsafMessage_Acknowledgement) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 21}
}

func (x *CsafMessage_Acknowledgement) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

func (x *CsafMessage_Acknowledgement) GetOrganization() string {
	if x != nil {
		return x.Organization
	}
	return ""
}

func (x *CsafMessage_Acknowledgement) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

type CsafMessage_Vulnerability struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title           string                         `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Id              *CsafMessage_VulnerabilityId   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Notes           []*CsafMessage_Note            `protobuf:"bytes,3,rep,name=notes,proto3" json:"notes,omitempty"`
	Cve             string                         `protobuf:"bytes,4,opt,name=cve,proto3" json:"cve,omitempty"`
	ProductStatus   *CsafMessage_ProductStatus     `protobuf:"bytes,5,opt,name=product_status,json=productStatus,proto3" json:"product_status,omitempty"`
	Scores          []*CsafMessage_Score           `protobuf:"bytes,6,rep,name=scores,proto3" json:"scores,omitempty"`
	Remediations    []*CsafMessage_Remedation      `protobuf:"bytes,7,rep,name=remediations,proto3" json:"remediations,omitempty"`
	References      []*CsafMessage_Reference       `protobuf:"bytes,8,rep,name=references,proto3" json:"references,omitempty"`
	DiscoveryDate   string                         `protobuf:"bytes,9,opt,name=discovery_date,json=discoveryDate,proto3" json:"discovery_date,omitempty"`
	ReleaseDate     string                         `protobuf:"bytes,10,opt,name=release_date,json=releaseDate,proto3" json:"release_date,omitempty"`
	Involvements    []*CsafMessage_Involvement     `protobuf:"bytes,11,rep,name=involvements,proto3" json:"involvements,omitempty"`
	Threats         []*CsafMessage_Threat          `protobuf:"bytes,12,rep,name=threats,proto3" json:"threats,omitempty"`
	Acknowledgments []*CsafMessage_Acknowledgement `protobuf:"bytes,13,rep,name=acknowledgments,proto3" json:"acknowledgments,omitempty"`
}

func (x *CsafMessage_Vulnerability) Reset() {
	*x = CsafMessage_Vulnerability{}
	if protoimpl.UnsafeEnabled {
		mi := &file_csaf_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CsafMessage_Vulnerability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CsafMessage_Vulnerability) ProtoMessage() {}

func (x *CsafMessage_Vulnerability) ProtoReflect() protoreflect.Message {
	mi := &file_csaf_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CsafMessage_Vulnerability.ProtoReflect.Descriptor instead.
func (*CsafMessage_Vulnerability) Descriptor() ([]byte, []int) {
	return file_csaf_proto_rawDescGZIP(), []int{0, 22}
}

func (x *CsafMessage_Vulnerability) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CsafMessage_Vulnerability) GetId() *CsafMessage_VulnerabilityId {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetNotes() []*CsafMessage_Note {
	if x != nil {
		return x.Notes
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetCve() string {
	if x != nil {
		return x.Cve
	}
	return ""
}

func (x *CsafMessage_Vulnerability) GetProductStatus() *CsafMessage_ProductStatus {
	if x != nil {
		return x.ProductStatus
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetScores() []*CsafMessage_Score {
	if x != nil {
		return x.Scores
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetRemediations() []*CsafMessage_Remedation {
	if x != nil {
		return x.Remediations
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetReferences() []*CsafMessage_Reference {
	if x != nil {
		return x.References
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetDiscoveryDate() string {
	if x != nil {
		return x.DiscoveryDate
	}
	return ""
}

func (x *CsafMessage_Vulnerability) GetReleaseDate() string {
	if x != nil {
		return x.ReleaseDate
	}
	return ""
}

func (x *CsafMessage_Vulnerability) GetInvolvements() []*CsafMessage_Involvement {
	if x != nil {
		return x.Involvements
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetThreats() []*CsafMessage_Threat {
	if x != nil {
		return x.Threats
	}
	return nil
}

func (x *CsafMessage_Vulnerability) GetAcknowledgments() []*CsafMessage_Acknowledgement {
	if x != nil {
		return x.Acknowledgments
	}
	return nil
}

var File_csaf_proto protoreflect.FileDescriptor

var file_csaf_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x22, 0xaf, 0x1e, 0x0a, 0x0b, 0x43, 0x73, 0x61, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x08, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x45, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x74, 0x72, 0x65, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x4e, 0x0a, 0x0f, 0x76,
	0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66,
	0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c,
	0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x52, 0x0f, 0x76, 0x75, 0x6c, 0x6e,
	0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x1a, 0xaf, 0x01, 0x0a, 0x09,
	0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e,
	0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b,
	0x0a, 0x11, 0x69, 0x73, 0x73, 0x75, 0x69, 0x6e, 0x67, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72,
	0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x69, 0x73, 0x73, 0x75, 0x69,
	0x6e, 0x67, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x1a, 0x57, 0x0a,
	0x0f, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0x36, 0x0a, 0x06, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0x70,
	0x0a, 0x09, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x35, 0x0a, 0x06, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x45, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x52, 0x06,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x1a, 0xc3, 0x02, 0x0a, 0x08, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x51, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x68, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x52, 0x0f, 0x72, 0x65, 0x76, 0x69, 0x73, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x73, 0x74, 0x6f,
	0x72, 0x79, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x12, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x6f, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x09, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x1a, 0x4c, 0x0a, 0x04, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x1a, 0x22, 0x0a, 0x0c, 0x44, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x37, 0x0a, 0x09, 0x52, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72,
	0x79, 0x1a, 0x45, 0x0a, 0x11, 0x41, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65,
	0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0x87, 0x04, 0x0a, 0x08, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x63,
	0x73, 0x61, 0x66, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x63, 0x73, 0x61, 0x66, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e,
	0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73,
	0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73,
	0x68, 0x65, 0x72, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x12, 0x3b,
	0x0a, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e,
	0x67, 0x52, 0x08, 0x74, 0x72, 0x61, 0x63, 0x6b, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x47,
	0x0a, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66,
	0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x73,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x0a, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x57, 0x0a, 0x12, 0x61, 0x67, 0x67,
	0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61,
	0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x67,
	0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x52,
	0x11, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69,
	0x74, 0x79, 0x1a, 0x3c, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x1a, 0xb1, 0x01, 0x0a, 0x08, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x38, 0x0a,
	0x07, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x07,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x3b, 0x0a, 0x08, 0x62, 0x72, 0x61, 0x6e, 0x63,
	0x68, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x08, 0x62, 0x72, 0x61, 0x6e,
	0x63, 0x68, 0x65, 0x73, 0x1a, 0xe4, 0x01, 0x0a, 0x0c, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x68, 0x69, 0x70, 0x12, 0x2b, 0x0a, 0x11, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x3f,
	0x0a, 0x1c, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x65, 0x73, 0x54, 0x6f, 0x50,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x4a, 0x0a, 0x11, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x95, 0x01, 0x0a, 0x0b,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x54, 0x72, 0x65, 0x65, 0x12, 0x3b, 0x0a, 0x08, 0x62,
	0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x52, 0x08,
	0x62, 0x72, 0x61, 0x6e, 0x63, 0x68, 0x65, 0x73, 0x12, 0x49, 0x0a, 0x0d, 0x72, 0x65, 0x6c, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68, 0x69, 0x70, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x68, 0x69, 0x70, 0x52, 0x0d, 0x72, 0x65, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x68,
	0x69, 0x70, 0x73, 0x1a, 0x46, 0x0a, 0x0f, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69,
	0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x1a, 0xab, 0x01, 0x0a, 0x0d,
	0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a,
	0x05, 0x66, 0x69, 0x78, 0x65, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x66, 0x69,
	0x78, 0x65, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x5f, 0x61, 0x66, 0x66,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x6b, 0x6e, 0x6f,
	0x77, 0x6e, 0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x5f, 0x61, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x4e, 0x6f, 0x74,
	0x41, 0x66, 0x66, 0x65, 0x63, 0x74, 0x65, 0x64, 0x12, 0x2f, 0x0a, 0x13, 0x75, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x6e, 0x76, 0x65, 0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x12, 0x75, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x6e, 0x76, 0x65,
	0x73, 0x74, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x88, 0x01, 0x0a, 0x06, 0x43, 0x76,
	0x73, 0x73, 0x56, 0x33, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x09, 0x62, 0x61, 0x73, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65, 0x53, 0x65, 0x76, 0x65, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x53, 0x74,
	0x72, 0x69, 0x6e, 0x67, 0x1a, 0x5b, 0x0a, 0x05, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x73, 0x12, 0x36, 0x0a, 0x07, 0x63, 0x76, 0x73,
	0x73, 0x5f, 0x76, 0x33, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x43, 0x76, 0x73, 0x73, 0x56, 0x33, 0x52, 0x06, 0x63, 0x76, 0x73, 0x73, 0x56,
	0x33, 0x1a, 0x54, 0x0a, 0x0a, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x18, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x1a, 0x3b, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x6c,
	0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x61, 0x72, 0x74, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x1a, 0x3e, 0x0a, 0x06, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65,
	0x67, 0x6f, 0x72, 0x79, 0x1a, 0x65, 0x0a, 0x0f, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c, 0x65,
	0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x12, 0x22, 0x0a,
	0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x1a, 0xcb, 0x05, 0x0a, 0x0d,
	0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x36, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x56, 0x75, 0x6c, 0x6e, 0x65, 0x72, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x79, 0x49, 0x64, 0x52, 0x02, 0x69, 0x64, 0x12, 0x31, 0x0a, 0x05, 0x6e,
	0x6f, 0x74, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x4e, 0x6f, 0x74, 0x65, 0x52, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x63, 0x76, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x63, 0x76, 0x65,
	0x12, 0x4b, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x2e, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0d,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x34, 0x0a,
	0x06, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x52, 0x06, 0x73, 0x63, 0x6f,
	0x72, 0x65, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x72, 0x65, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x2e, 0x52, 0x65, 0x6d, 0x65, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x72, 0x65,
	0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x40, 0x0a, 0x0a, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x52, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x25, 0x0a, 0x0e,
	0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x72, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x5f, 0x64,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x46, 0x0a, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66, 0x4d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x0c, 0x69, 0x6e, 0x76, 0x6f, 0x6c, 0x76, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x37,
	0x0a, 0x07, 0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x73, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x1d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61, 0x66,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x54, 0x68, 0x72, 0x65, 0x61, 0x74, 0x52, 0x07,
	0x74, 0x68, 0x72, 0x65, 0x61, 0x74, 0x73, 0x12, 0x50, 0x0a, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f,
	0x77, 0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x2e, 0x43, 0x73, 0x61,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x41, 0x63, 0x6b, 0x6e, 0x6f, 0x77, 0x6c,
	0x65, 0x64, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0f, 0x61, 0x63, 0x6b, 0x6e, 0x6f, 0x77,
	0x6c, 0x65, 0x64, 0x67, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x42, 0x1d, 0x5a, 0x1b, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x66, 0x6b, 0x61, 0x75, 0x74, 0x7a, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x73, 0x61, 0x66, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_csaf_proto_rawDescOnce sync.Once
	file_csaf_proto_rawDescData = file_csaf_proto_rawDesc
)

func file_csaf_proto_rawDescGZIP() []byte {
	file_csaf_proto_rawDescOnce.Do(func() {
		file_csaf_proto_rawDescData = protoimpl.X.CompressGZIP(file_csaf_proto_rawDescData)
	})
	return file_csaf_proto_rawDescData
}

var file_csaf_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_csaf_proto_goTypes = []interface{}{
	(*CsafMessage)(nil),                   // 0: protocsaf.CsafMessage
	(*CsafMessage_Publisher)(nil),         // 1: protocsaf.CsafMessage.Publisher
	(*CsafMessage_RevisionHistory)(nil),   // 2: protocsaf.CsafMessage.RevisionHistory
	(*CsafMessage_Engine)(nil),            // 3: protocsaf.CsafMessage.Engine
	(*CsafMessage_Generator)(nil),         // 4: protocsaf.CsafMessage.Generator
	(*CsafMessage_Tracking)(nil),          // 5: protocsaf.CsafMessage.Tracking
	(*CsafMessage_Note)(nil),              // 6: protocsaf.CsafMessage.Note
	(*CsafMessage_Distribution)(nil),      // 7: protocsaf.CsafMessage.Distribution
	(*CsafMessage_Reference)(nil),         // 8: protocsaf.CsafMessage.Reference
	(*CsafMessage_AggregateSeverity)(nil), // 9: protocsaf.CsafMessage.AggregateSeverity
	(*CsafMessage_Document)(nil),          // 10: protocsaf.CsafMessage.Document
	(*CsafMessage_Product)(nil),           // 11: protocsaf.CsafMessage.Product
	(*CsafMessage_Branches)(nil),          // 12: protocsaf.CsafMessage.Branches
	(*CsafMessage_Relationship)(nil),      // 13: protocsaf.CsafMessage.Relationship
	(*CsafMessage_ProductTree)(nil),       // 14: protocsaf.CsafMessage.ProductTree
	(*CsafMessage_VulnerabilityId)(nil),   // 15: protocsaf.CsafMessage.VulnerabilityId
	(*CsafMessage_ProductStatus)(nil),     // 16: protocsaf.CsafMessage.ProductStatus
	(*CsafMessage_CvssV3)(nil),            // 17: protocsaf.CsafMessage.CvssV3
	(*CsafMessage_Score)(nil),             // 18: protocsaf.CsafMessage.Score
	(*CsafMessage_Remedation)(nil),        // 19: protocsaf.CsafMessage.Remedation
	(*CsafMessage_Involvement)(nil),       // 20: protocsaf.CsafMessage.Involvement
	(*CsafMessage_Threat)(nil),            // 21: protocsaf.CsafMessage.Threat
	(*CsafMessage_Acknowledgement)(nil),   // 22: protocsaf.CsafMessage.Acknowledgement
	(*CsafMessage_Vulnerability)(nil),     // 23: protocsaf.CsafMessage.Vulnerability
}
var file_csaf_proto_depIdxs = []int32{
	10, // 0: protocsaf.CsafMessage.document:type_name -> protocsaf.CsafMessage.Document
	14, // 1: protocsaf.CsafMessage.product_tree:type_name -> protocsaf.CsafMessage.ProductTree
	23, // 2: protocsaf.CsafMessage.vulnerabilities:type_name -> protocsaf.CsafMessage.Vulnerability
	3,  // 3: protocsaf.CsafMessage.Generator.engine:type_name -> protocsaf.CsafMessage.Engine
	2,  // 4: protocsaf.CsafMessage.Tracking.revision_history:type_name -> protocsaf.CsafMessage.RevisionHistory
	4,  // 5: protocsaf.CsafMessage.Tracking.generator:type_name -> protocsaf.CsafMessage.Generator
	1,  // 6: protocsaf.CsafMessage.Document.publisher:type_name -> protocsaf.CsafMessage.Publisher
	5,  // 7: protocsaf.CsafMessage.Document.tracking:type_name -> protocsaf.CsafMessage.Tracking
	6,  // 8: protocsaf.CsafMessage.Document.notes:type_name -> protocsaf.CsafMessage.Note
	7,  // 9: protocsaf.CsafMessage.Document.distribution:type_name -> protocsaf.CsafMessage.Distribution
	8,  // 10: protocsaf.CsafMessage.Document.references:type_name -> protocsaf.CsafMessage.Reference
	9,  // 11: protocsaf.CsafMessage.Document.aggregate_severity:type_name -> protocsaf.CsafMessage.AggregateSeverity
	11, // 12: protocsaf.CsafMessage.Branches.product:type_name -> protocsaf.CsafMessage.Product
	12, // 13: protocsaf.CsafMessage.Branches.branches:type_name -> protocsaf.CsafMessage.Branches
	11, // 14: protocsaf.CsafMessage.Relationship.full_product_name:type_name -> protocsaf.CsafMessage.Product
	12, // 15: protocsaf.CsafMessage.ProductTree.branches:type_name -> protocsaf.CsafMessage.Branches
	13, // 16: protocsaf.CsafMessage.ProductTree.relationships:type_name -> protocsaf.CsafMessage.Relationship
	17, // 17: protocsaf.CsafMessage.Score.cvss_v3:type_name -> protocsaf.CsafMessage.CvssV3
	15, // 18: protocsaf.CsafMessage.Vulnerability.id:type_name -> protocsaf.CsafMessage.VulnerabilityId
	6,  // 19: protocsaf.CsafMessage.Vulnerability.notes:type_name -> protocsaf.CsafMessage.Note
	16, // 20: protocsaf.CsafMessage.Vulnerability.product_status:type_name -> protocsaf.CsafMessage.ProductStatus
	18, // 21: protocsaf.CsafMessage.Vulnerability.scores:type_name -> protocsaf.CsafMessage.Score
	19, // 22: protocsaf.CsafMessage.Vulnerability.remediations:type_name -> protocsaf.CsafMessage.Remedation
	8,  // 23: protocsaf.CsafMessage.Vulnerability.references:type_name -> protocsaf.CsafMessage.Reference
	20, // 24: protocsaf.CsafMessage.Vulnerability.involvements:type_name -> protocsaf.CsafMessage.Involvement
	21, // 25: protocsaf.CsafMessage.Vulnerability.threats:type_name -> protocsaf.CsafMessage.Threat
	22, // 26: protocsaf.CsafMessage.Vulnerability.acknowledgments:type_name -> protocsaf.CsafMessage.Acknowledgement
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_csaf_proto_init() }
func file_csaf_proto_init() {
	if File_csaf_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_csaf_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Publisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_RevisionHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Engine); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Generator); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Tracking); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Note); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Distribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Reference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_AggregateSeverity); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Product); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Branches); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Relationship); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_ProductTree); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_VulnerabilityId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_ProductStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_CvssV3); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Score); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Remedation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Involvement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Threat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Acknowledgement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_csaf_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CsafMessage_Vulnerability); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_csaf_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_csaf_proto_goTypes,
		DependencyIndexes: file_csaf_proto_depIdxs,
		MessageInfos:      file_csaf_proto_msgTypes,
	}.Build()
	File_csaf_proto = out.File
	file_csaf_proto_rawDesc = nil
	file_csaf_proto_goTypes = nil
	file_csaf_proto_depIdxs = nil
}
